(function () {
	var xhplugincall = (function () {
		'use strict';
		var lang = document.getElementsByTagName("html")[0].getAttribute("lang");
		if (lang !== 'en')
			tinymce.PluginManager.requireLangPack('xhplugincall', lang + ',de');
		tinymce.PluginManager.add('xhplugincall', function (editor, url) {
//			editor.settings.content_css += ', ' + url + '/style.css'; // tinymce5
    editor.contentCSS.push(url + '/style.css');
//console.log(editor);
      editor.ui.registry.addIcon('power-cord', '<svg width="16" height="16"><use xlink:href="' + url + '/symbol-defs.svg#icon-power-cord"></use></svg>');
      function _onAction() {
        var initial = editor.selection.getContent().match(/\{{3}(.*)\}{3}/);
        var win = editor.windowManager.open({
            title: 'Insert/edit a XH plugin call',
            size: 'medium',
            body: {
              type: 'panel',
              layout: 'flow',
              items: [{
                  type: 'input',
                  name: 'plugincall',
                  label: 'Insert/edit the XH plugin call here - without {{{}}}',
                  placeholder: 'plugincall()'
                }
              ]
            },
            buttons: [{
                type: 'cancel',
                name: 'cancel',
                text: 'cancel'
              }, {
                type: 'submit',
                name: 'submit',
                text: 'Paste',
                primary: true
              }
            ],
            initialData: {
              plugincall: initial ? initial[1] : ""
            },
            onSubmit: function (api) {
              var data = api.getData();
              if (data.plugincall.length) {
                editor.insertContent('<span class="xhplugincall mceNonEditable" lang="' + lang + '">{{{' + data.plugincall + '}}}</span>');
              } else
                editor.insertContent('');
              win.close();
            }
          });
      }
      
// Define the Toolbar button
      editor.ui.registry.addButton('xhplugincall', {
          tooltip: "XH-Plugincall",
          icon:'power-cord',
          onAction: _onAction
      });
// Define the Menu Item
      editor.ui.registry.addMenuItem('xhplugincall', {
          text: 'XH-Plugincall',
          icon:'power-cord',
          context: 'tools',
          onAction: _onAction
      });

      editor.on('BeforeSetContent', function (e) {
				if (e.load) {
					e.content = e.content.replace(/\{{3}.*?\}{3}/g, '<span class="xhplugincall mceNonEditable" lang="' + lang + "\">$&</span>");
				}
      });

      editor.on('GetContent', function (e) {
				if (e.save) {
					e.content = e.content.replace(/\<span class="xhplugincall mceNonEditable".*?\>(.*?)\<\/span\>/g, "$1");
				}
			});
      // Return details to be displayed in TinyMCE's "Help" plugin, if you use it
      // This is optional.
      return {
          getMetadata: function () {
              return {
                  name: "XH Plugincall",
                  url: "https://github.com/manu37/tinymce5/tree/master/tinymce/plugins/xhplugincall"
              };
          }
      };
		});
	}
		());
})();
